apiVersion: apps/v1beta1
kind: Deployment
metadata:
  namespace: ${ENVIRONMENT}
  name: lighthouse-deployment
  labels:
    environment: ${ENVIRONMENT}
    app-kubernetes-io/part-of: '3-SE'
spec:
  template:
    metadata:
      labels:
        app: lighthouse
        environment: ${ENVIRONMENT}
        app-kubernetes-io/part-of: '3-SE'
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - image: ${DOCKER_IMAGE}
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000

          resources:
            requests:
              memory: '256Mi'
              cpu: '500m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          imagePullPolicy: IfNotPresent
          name: lighthouse
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  namespace: ${ENVIRONMENT}
  name: lighthouse-svc
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: lighthouse
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: ${ENVIRONMENT}
  name: lighthouse-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - path: /lighthouse(/|$)(.*)
            backend:
              serviceName: lighthouse-svc
              servicePort: 80
