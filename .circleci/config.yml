# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  jq: circleci/jq@1.9.0
  azure-cli: circleci/azure-cli@1.0.0
  frontend-deploy: hi3g-access/frontend-deploy@2.0.0

jobs:
  checkout:
    docker:
      - image: circleci/node:13.2.0
    working_directory: ~/repo
    steps:
      - checkout
      - save_cache:
          paths:
            - ~/repo
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}

  install:
    docker:
      - image: circleci/node:13.2.0
    working_directory: ~/repo
    steps:
      - frontend-deploy/install

  versioning:
    docker:
      - image: circleci/node:13.2.0
    working_directory: ~/repo
    steps:
      - frontend-deploy/versioning

  publish:
    docker:
      - image: circleci/node:13.2.0
    working_directory: ~/repo
    executor: azure-cli/default
    steps:
      - jq/install
      - frontend-deploy/publish:
          username: $DOCKER_USER
          password: $DOCKER_PASSWD
          sshkey: $SSH_KEY
          token: $GIT_COMMIT_TOKEN

  deploy:
    docker:
      - image: circleci/node:13.2.0
    working_directory: ~/repo
      
    steps:
      - jq/install
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}-versioned
      - setup_remote_docker
      - azure-cli/install
      - run:
        name: Install envsubst
        command: |
          sudo apt-get update && sudo apt-get install -y gettext-base
      - run:
          name: Install kubectl
          command: sudo az aks install-cli --client-version "1.13.3"
      - run:
          name: Login to Azure
          command: |
            cd ~/repo/.aks
            ./login.sh prod $AZURE_USER_NAME $AZURE_PASSWORD
      - run:
          name: Generate k8s manifest
          command: |
            cd ~/repo/.aks
            ./generate.sh prod
      - run:
          name: Deploy to Azure
          command: |
            cd ~/repo/.aks
            ./deploy.sh
  
workflows:
  version: 2
  deploy:
    jobs:
      - checkout

      - install:
          requires:
            - checkout

      - versioning:
          filters:
            branches:
              only:
                - master
          requires:
            - install

      - publish:
          filters:
            branches:
              only:
                - master
          requires:
            - versioning

      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - publish
